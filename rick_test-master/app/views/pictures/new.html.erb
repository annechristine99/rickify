<div id="direct_upload">
  <h1>New picture</h1>
  <h2>Direct upload from the browser<% if @unsigned %>. Unsigned upload using a preset<% end %></h2>
  <%= form_for(@picture, :url => pictures_path) do |f| %>
      <%= f.label :image, "Image:" %>
          <%= link_to("Upload", "#", :class => "upload_button") %>
          <% if @unsigned %>
            <%= f.cl_unsigned_image_upload(:image_id, @preset_name) %>
          <% else %>
            <%= f.cl_image_upload(:image_id, :return_delete_token=>true) %>
          <% end %>
        <%= f.submit "Submit picture" %>
        <% if @error %><span class="error"><%= @error %></span><% end %>
  <% end %>
<canvas id = "myCanvas" width = 1000px height = 1000px>














</canvas>
<!-- <a href="<%= pictures_path %>" class="back_link">Back to list</a> -->

<div id="info"></div>

<!-- Configure Cloudinary jQuery plugin -->
<%= cloudinary_js_config %>

<script>
  $(document).ready(function() {
    // Cloudinary jQuery integration library uses jQuery File Upload widget
    // (see http://blueimp.github.io/jQuery-File-Upload/).
    // Any file input field with cloudinary-fileupload class is automatically
    // wrapped using the File Upload widget and configured for Cloudinary uploads.
    // You can further customize the configuration using .fileupload method
    // as we do below.
    $(".cloudinary-fileupload")
      .cloudinary_fileupload({
        // Uncomment the following lines to enable client side image resizing and valiation.
        // Make sure cloudinary/processing is included the js file
        //disableImageResize: false,
        //imageMaxWidth: 800,
        //imageMaxHeight: 600,
        //acceptFileTypes: /(\.|\/)(gif|jpe?g|png|bmp|ico)$/i,
        //maxFileSize: 20000000, // 20MB
        start: function (e) {
          $(".status").text("Starting upload...");
        },
        progress: function (e, data) {
          $(".status").text("Uploading... " + Math.round((data.loaded * 100.0) / data.total) + "%");
        },
        fail: function (e, data) {
          $(".status").text("Upload failed");
        }
      })
      .off("cloudinarydone").on("cloudinarydone", function (e, data) {
        image_url_to_frs(data.result.url)
        image_pubid_to_upload(data.result.public_id, data.result.format)
        $("#picture_bytes").val(data.result.bytes);
        // $(".status").text("");
        // var preview = $(".preview").html('');
        // $.cloudinary.image(data.result.public_id, {
        //   format: data.result.format, width: 50, height: 50, crop: "fit"
        // }).appendTo(preview);
        // $('<a/>').
        //   addClass('delete_by_token').
        //   attr({href: '#'}).
        //   data({delete_token: data.result.delete_token}).
        //   html('&times;').
        //   appendTo(preview).
        //   click(function(e) {
        //     e.preventDefault();
        //     $.cloudinary.delete_by_token($(this).data('delete_token')).done(function(){
        //       $('.preview').html('');
        //       $('#info').html('');
        //       $("#picture_bytes").val('');
        //       $('input[name="picture[image]"]').remove();
        //     }).fail(function() {
        //       $('.status').text("Cannot delete image");
        //   });
        // });
        // view_upload_details(data.result);
      });
    });

    // Worse comes to worse, stick an ajax call here to the create path, include data

    function image_pubid_to_upload(address, format) {
      console.log('uploading image');
      $.ajax({
        "url": "/pictures/upload",
        "method": "post",
        "data": { "address": address, "format": format},
        "success": function(){
          console.log("woo")
        }
      })
    }

    function rickifier(data, address) {
      var c=document.getElementById("myCanvas");
      var ctx=c.getContext("2d");
      var imageObj1 = new Image();
      var imageObj2 = new Image();
      imageObj1.src = address
      if(data.faces[0].features.eyes===undefined){
        var leftEyeX = data.faces[0].features.nose.x*.3
        var leftEyeY = data.faces[0].features.nose.y*.2
        var rightEyeX = data.faces[0].features.nose.x*2
        var rightEyeY = data.faces[0].features.nose.y*.2
        var browWidth = (rightEyeX*.9)-leftEyeX
      }
      else{
        var leftEyeX = data.faces[0].features.eye[0].x
        var leftEyeY = data.faces[0].features.eye[0].y
        var rightEyeX = data.faces[0].features.eye[1].x
        var rightEyeY = data.faces[0].features.eye[1].y
        var browWidth = (rightEyeX+data.faces[0].features.eyes[1].width)-leftEyeX
      }

      imageObj1.onload = function() {
        ctx.drawImage(imageObj1, data.faces[0].x, data.faces[0].y, data.faces[0].width, data.faces[0].height, 0, 0, 1000, 1000);
        imageObj2.src = "http://res.cloudinary.com/ds1rn0ryl/image/upload/v1473438420/hxk8ckcb54waw8e4tcr6.png";
        imageObj2.onload = function() {
          ctx.drawImage(imageObj2, leftEyeX, leftEyeY, browWidth, 100);
          // ctx.drawImage(imageObj2, 350, 250)
          $("#myCanvas").addClass('cloudinary-fileupload')
          $("#myCanvas").cloudinary_fileupload({
            start: function (e) {
              $(".status").text("Starting upload...");
            },
            progress: function (e, data) {
              $(".status").text("Uploading... " + Math.round((data.loaded * 100.0) / data.total) + "%");
            },
            fail: function (e, data) {
              $(".status").text("Upload failed");
            }
          })
          // var img = c.toDataURL("image/png");
          // $('body').append('<img src="' + img + '"/>');
          }
        };
       }

    function image_url_to_frs(address) {
      console.log('frsing image');
      $.ajax({
        "url": "/frs",
        "method": "GET",
        data: {address: address}
      }).done(function(data){
        console.log(data)
        rickifier(data, address)
      })
    }





    // function view_upload_details(upload) {
    //   // Build an html table out of the upload object
    //   var rows = [];
    //   $.each(upload, function(k,v){
    //     rows.push(
    //       $("<tr>")
    //         .append($("<td>").text(k))
    //         .append($("<td>").text(JSON.stringify(v))));
    //   });
    //   $("#info").html(
    //     $("<div class=\"upload_details\">")
    //       .append("<h2>Upload metadata:</h2>")
    //       .append($("<table>").append(rows)));
    // }
</script>



<!-- <h1>New</h1>


<%= form_tag(pictures_path, :method => :post) do  %>
  <%= cl_image_upload_tag(:image_id) %>
  <%= submit_tag %>
  <% end %>

<%= form_for(@picture, :url => pictures_path) do |f| %>

  <%= f.cl_image_upload(:image) %>

  <%= f.submit %>
<% end %>


<%= cloudinary_js_config %>
 -->
